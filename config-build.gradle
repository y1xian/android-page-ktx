// 全局配置
// 先加载local.properties文件
Properties localProperties = new Properties()
try {
    def localFile = project.rootProject.file('local.properties')
    if (localFile != null && localFile.exists()) {
        localProperties.load(localFile.newDataInputStream())
    }
} catch (Exception ignored) {
    println("local.properties not found")
}
ext {
    POM_LOCAL_PATH = null
    if (!localProperties.isEmpty() && localProperties.containsKey("POM_LOCAL_PATH")) {
        POM_LOCAL_PATH = localProperties.getProperty("POM_LOCAL_PATH", null)
    }
    // 统一仓库
    repositoriesExt = {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url "https://jitpack.io" }
        mavenCentral()
        if (POM_LOCAL_PATH != null) {
            // 本地仓库
            maven { url uri(POM_LOCAL_PATH) }
        }
    }

    androidExt = [
            compileSdk     : 33,
            minSdk         : 21,
            applicationId  : "com.yyxnb.android",
            targetSdk      : 33,
            versionCode    : 1,
            versionName    : '2023.0904.0100',
            minifyEnabled  : false,
            shrinkResources: false,
            zipAlignEnabled: false
    ]

    compileOptionsExt_1_8 = {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 代码编译打包成dex
    dexOptionsExt = {
        // 使用增量模式构建
        incremental true
        // 最大堆内存
        javaMaxHeapSize "8g"
        // 是否支持大工程模式
        jumboMode = true
        // 预编译 dex 库。在我们build的时候会快些，但clean时便会慢，默认开启
        preDexLibraries = true
        // 线程数
        threadCount = 8
    }

    // 发现代码质量问题
    lintOptionsExt = {
        // true--关闭lint报告的分析进度
        quiet true
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds true
        // true--错误发生后停止gradle构建
        abortOnError false
        // true--只报告error
        ignoreWarnings true
        // true--忽略有错误的文件的全/绝对路径(默认是true)
        absolutePaths true
        // true--检查所有问题点，包含其他默认关闭项
        checkAllWarnings true
        // true--所有warning当做error
        warningsAsErrors true
    }

    versions = [
            android_plugin: '7.3.0',

            appcompat     : "1.6.1",
            core          : "1.10.1",

            multidex      : '2.0.1',

            auto_service  : '1.0-rc7',
            javapoet      : '1.13.0',

    ]

    classpathExt = [
            android_gradle: "com.android.tools.build:gradle:${versions.android_plugin}",
    ]

    dependenciesExt = [
            appcompat            : "androidx.appcompat:appcompat:${versions.appcompat}",
            core                 : "androidx.core:core-ktx:${versions.core}",
            reflect              : "org.jetbrains.kotlin:kotlin-reflect:1.7.20",
            fragment_ktx         : 'androidx.fragment:fragment-ktx:1.6.1',

            symbol_processing_api: "com.google.devtools.ksp:symbol-processing-api:1.8.20-1.0.10",
            kotlinpoet           : "com.squareup:kotlinpoet:1.12.0",

    ]

}