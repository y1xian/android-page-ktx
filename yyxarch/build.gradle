apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_version.compileSdkVersion

    defaultConfig {
        minSdkVersion build_version.minSdkVersion
        targetSdkVersion build_version.targetSdkVersion
        versionCode build_version.versionCode
        versionName build_version.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件 library报错
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //Kotlin中使用Java8特性
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    //防止编译的时候oom、GC
    dexOptions {
        //分配给gradle的内存
        javaMaxHeapSize "4g"
    }

    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    // 约束
    api libs.constraint
    //  v7 v4
    api([libs.support_v7, libs.support_v4, libs.recyclerview, libs.design, libs.annotations])
    // rx全家桶
    api([libs.rxjava2, libs.rxandroid2, libs.rxbinding2])
    // retrofit2    https://github.com/square/retrofit
    api([libs.retrofit2, libs.retrofit2_rxjava, libs.retrofit2_gson])
    api libs.retrofit2_kotlin_coroutines
    // okhttp3     https://github.com/square/okhttp
    api([libs.okhttp3, libs.okhttp3_logging])
    // jetpack
    api([libs.arch_comp_java8, libs.arch_comp_runtime, libs.arch_comp_extensions, libs.arch_comp_livedata_rx])
//    kapt libs.arch_comp_compiler
    //gson  https://github.com/google/gson
    api libs.gson
    //避免65K限制       https://developer.android.com/tools/building/multidex.html
    api libs.multidex
    //kt
    api libs.kotlin_stdlib
    api libs.kotlin_coroutines
    api libs.kotlin_coroutines_core
    // autodispose  https://github.com/uber/AutoDispose
//    api(libs.autodispose, libs.autodispose_ktx, libs.autodispose_android_ktx, libs.autodispose_archs_ktx)
    //mmkv
    api libs.mmkv
    //消息总线
    api libs.live_event_bus
    //ac 侧滑
    api libs.parallaxbacklayout
}
